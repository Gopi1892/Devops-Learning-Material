provider "aws" {
  region = "us-east-1"  # You can change the region as per your need
}

# Create a VPC
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"

  tags = {
    Name = "My_VPC"
  }
}

# Create a subnet
resource "aws_subnet" "my_subnet" {
  vpc_id            = aws_vpc.my_vpc.id
  cidr_block        = "10.0.1.0/24"
  availability_zone = "us-east-1a"  # Adjust for your desired region and AZ

  tags = {
    Name = "My_Subnet"
  }
}

# Create an internet gateway
resource "aws_internet_gateway" "my_igw" {
  vpc_id = aws_vpc.my_vpc.id

  tags = {
    Name = "My_Internet_Gateway"
  }
}

# Create a route table
resource "aws_route_table" "my_route_table" {
  vpc_id = aws_vpc.my_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.my_igw.id
  }

  tags = {
    Name = "My_Route_Table"
  }
}

# Associate the route table with the subnet
resource "aws_route_table_association" "my_route_table_assoc" {
  subnet_id      = aws_subnet.my_subnet.id
  route_table_id = aws_route_table.my_route_table.id
}

# Create a security group to allow SSH and HTTP
resource "aws_security_group" "my_security_group" {
  vpc_id = aws_vpc.my_vpc.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "My_Security_Group"
  }
}

# Create the first EC2 instance
resource "aws_instance" "instance_1" {
  ami               = "ami-0ebfd941bbafe70c6"  # Use a valid AMI ID from your region
  instance_type     = "t2.micro"
  subnet_id         = aws_subnet.my_subnet.id
  vpc_security_group_ids = [aws_security_group.my_security_group.id]  # Use vpc_security_group_ids instead of security_group_ids

  tags = {
    Name = "Instance_1"
  }
}

# Create the second EC2 instance
resource "aws_instance" "instance_2" {
  ami               = "ami-0ebfd941bbafe70c6"  # Use the same or another AMI ID from your region
  instance_type     = "t2.micro"
  subnet_id         = aws_subnet.my_subnet.id
  vpc_security_group_ids = [aws_security_group.my_security_group.id]  # Use vpc_security_group_ids instead of security_group_ids

  tags = {
    Name = "Instance_2"
  }
}
